# Application Configuration
server:
  port: 8080
  servlet:
    context-path: /

spring:
  application:
    name: lms-backend

  # Database Configuration - Docker environment değişkenleri kullanacak
  datasource:
    url: jdbc:postgresql://localhost:5432/lms_backend
    username: lms_user
    password: lms_password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true

  # Redis Configuration - Docker environment değişkenleri kullanacak
  redis:
    host: localhost
    port: 6379
    password: # if required
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

  # Security Configuration
  security:
    jwt:
      secret: your-super-secret-jwt-key-here-make-it-long-and-secure-at-least-256-bits
      expiration: 86400000 # 24 hours
      refresh-expiration: 604800000 # 7 days

  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

# LMS specific configuration
lms:
  rate-limit:
    login:
      max-attempts: 5
      window-minutes: 15
    ip:
      max-attempts: 10
      window-minutes: 15

  audit:
    enabled: true
    log-level: INFO
    retention-days: 90

  security:
    password:
      min-length: 8
      require-uppercase: true
      require-lowercase: true
      require-numbers: true
      require-special-chars: true

# Logging configuration
logging:
  level:
    com.lms: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/lms-backend.log
    max-size: 100MB
    max-history: 30

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# Swagger/OpenAPI configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
  info:
    title: LMS Backend API
    description: Learning Management System Backend API with RBAC, Audit Logging, and Rate Limiting
    version: 1.1.0
    contact:
      name: LMS Development Team
      email: dev@lms.com
    license:
      name: MIT License
      url: https://opensource.org/licenses/MIT

# Server configuration
server:
  port: 8080
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Actuator configuration
management:
  server:
    port: 8081
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info,metrics,env,configprops
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
    info:
      enabled: true
    metrics:
      enabled: true

# Profile-specific configurations
---
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create-drop
  h2:
    console:
      enabled: true
      path: /h2-console

logging:
  level:
    com.lms: DEBUG
    org.springframework.security: DEBUG

---
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate
  datasource:
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10

logging:
  level:
    com.lms: WARN
    org.springframework.security: WARN
  file:
    max-size: 500MB
    max-history: 90

lms:
  rate-limit:
    login:
      max-attempts: 3
      window-minutes: 30
    ip:
      max-attempts: 5
      window-minutes: 30

---
spring:
  config:
    activate:
      on-profile: test
  jpa:
    hibernate:
      ddl-auto: create-drop
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver

logging:
  level:
    com.lms: DEBUG
    root: INFO